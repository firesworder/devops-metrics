// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/firesworder/devopsmetrics/internal (interfaces: DBStorage)

// Package mock_internal is a generated GoMock package.
package mock_dbstore

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDBStorage is a mock of DBStorage interface.
type MockDBStorage struct {
	ctrl     *gomock.Controller
	recorder *MockDBStorageMockRecorder
}

// MockDBStorageMockRecorder is the mock recorder for MockDBStorage.
type MockDBStorageMockRecorder struct {
	mock *MockDBStorage
}

// NewMockDBStorage creates a new mock instance.
func NewMockDBStorage(ctrl *gomock.Controller) *MockDBStorage {
	mock := &MockDBStorage{ctrl: ctrl}
	mock.recorder = &MockDBStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDBStorage) EXPECT() *MockDBStorageMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockDBStorage) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockDBStorageMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDBStorage)(nil).Close))
}

// Ping mocks base method.
func (m *MockDBStorage) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockDBStorageMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockDBStorage)(nil).Ping))
}
